AWSTemplateFormatVersion: '2010-09-09'
Description: CAB432 Assignment 2 infrastructure for the Cloud-Native Video Web App

Parameters:
  DomainName:
    Type: String
    Description: Fully qualified domain name serving the SPA (e.g. app.example.com)
  HostedZoneId:
    Type: String
    Description: Route53 hosted zone ID for the hosted domain
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC hosting the application workloads
  VpcCidr:
    Type: String
    Description: CIDR block that should be allowed to access the cache cluster
  CacheSubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnets used for the cache subnet group (minimum two)

Resources:
  VideoAssetsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      CorsConfiguration:
        CorsRules:
          - AllowedMethods: [GET, PUT, POST]
            AllowedOrigins: ['*']
            AllowedHeaders: ['*']
            ExposedHeaders: ['Content-Length']
      VersioningConfiguration:
        Status: Enabled

  VideoMetadataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: VideoMetadata
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: videoId
          AttributeType: S
        - AttributeName: ownerId
          AttributeType: S
        - AttributeName: createdAt
          AttributeType: S
      KeySchema:
        - AttributeName: videoId
          KeyType: HASH
        - AttributeName: ownerId
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: OwnerIndex
          KeySchema:
            - AttributeName: ownerId
              KeyType: HASH
            - AttributeName: createdAt
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  VideoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: video-webapp-users
      AutoVerifiedAttributes: [email]
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireUppercase: true
          RequireSymbols: false
      Schema:
        - Name: email
          AttributeDataType: String
          Required: true
          Mutable: true

  VideoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: video-webapp-spa
      UserPoolId: !Ref VideoUserPool
      GenerateSecret: false
      PreventUserExistenceErrors: ENABLED
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - implicit
      AllowedOAuthScopes:
        - email
        - openid
        - profile
      CallbackURLs:
        - !Sub 'https://${DomainName}/'
        - !Sub 'https://${DomainName}/auth/callback'
      LogoutURLs:
        - !Sub 'https://${DomainName}/'
        - !Sub 'https://${DomainName}/logout'
      SupportedIdentityProviders: [COGNITO]

  AppSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: n11817143-a2-secret
      Description: JWT secret for the CAB432 Assignment 2 video application
      GenerateSecretString:
        SecretStringTemplate: '{"JWT_SECRET":""}'
        GenerateStringKey: JWT_SECRET
        PasswordLength: 64
        ExcludePunctuation: true

  CacheSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow application access to Memcached cluster
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 11211
          ToPort: 11211
          CidrIp: !Ref VpcCidr

  CacheSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Subnet group for the video application cache cluster
      SubnetIds: !Ref CacheSubnetIds

  VideoCacheCluster:
    Type: AWS::ElastiCache::CacheCluster
    Properties:
      Engine: memcached
      CacheNodeType: cache.t3.micro
      NumCacheNodes: 1
      VpcSecurityGroupIds:
        - !Ref CacheSecurityGroup
      CacheSubnetGroupName: !Ref CacheSubnetGroup
      AZMode: single-az

  BucketParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /video-app/prod/s3-bucket
      Type: String
      Value: !Ref VideoAssetsBucket

  TableParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /video-app/prod/dynamo-table
      Type: String
      Value: !Ref VideoMetadataTable

  RegionParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /video-app/prod/region
      Type: String
      Value: !Ref AWS::Region

  CacheEndpointParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /video-app/prod/cache-endpoint
      Type: String
      Value: !Sub '${VideoCacheCluster.ConfigurationEndpoint.Address}:${VideoCacheCluster.ConfigurationEndpoint.Port}'

  Route53Record:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref DomainName
      Type: A
      AliasTarget:
        DNSName: api-load-balancer.example.com
        HostedZoneId: Z2P70J7EXAMPLE

Outputs:
  BucketName:
    Description: S3 bucket storing raw and transcoded videos
    Value: !Ref VideoAssetsBucket
  DynamoTableName:
    Description: DynamoDB table for metadata
    Value: !Ref VideoMetadataTable
  CacheEndpoint:
    Description: Endpoint of the Memcached cache cluster
    Value: !Sub '${VideoCacheCluster.ConfigurationEndpoint.Address}:${VideoCacheCluster.ConfigurationEndpoint.Port}'
  UserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref VideoUserPool
  UserPoolClientId:
    Description: Cognito SPA client ID
    Value: !Ref VideoUserPoolClient
  SecretArn:
    Description: ARN of the JWT secret
    Value: !Ref AppSecret
